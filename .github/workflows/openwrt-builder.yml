name: OpenWrt Builder

on:
  push:
    branches:
      - master
  schedule:
    - cron: '0 0 * * 0'
  repository_dispatch:
  workflow_dispatch:

env:
  BUILD_SCRIPT: build-scripts.sh
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: false

jobs:
  build:
    runs-on: ubuntu-22.04
    outputs:
      name: ${{ steps.extract_firmware_info.outputs.name }}
      path: ${{ steps.extract_firmware_info.outputs.path }}
      firmware: ${{ steps.extract_firmware_info.outputs.firmware_json }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@master
        
      - name: Initialization compile environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          # CPU信息
          echo -e "Total CPU cores\t: $(nproc)"
          cat /proc/cpuinfo | grep 'model name'
          
          # 内存信息
          free -h

          # 磁盘信息
          df -hT
          
          # 内核信息
          uname -a
          
          [ -f /proc/version ] && cat /proc/version
          [ -f /etc/issue.net ] && cat /etc/issue.net
          [ -f /etc/issue ] && cat /etc/issue
          
          # 资源信息
          ulimit -a

      - name: Set compile scripts
        run: |
          # 脚本路径
          scripts_path="$GITHUB_WORKSPACE/scripts"
          if [ ! -d "${scripts_path}" ]; then
              echo "脚本路径 '$scripts_path' 不存在!"
              exit 1
          fi
          
          # 执行脚本
          build_script="$GITHUB_WORKSPACE/$BUILD_SCRIPT"
          if [ ! -f "$build_script" ]; then
              echo "执行脚本 '$build_script' 不存在!"
              exit 1
          fi
          
          # 赋予权限
          chmod +x "$build_script"
          find "$scripts_path" -type f -exec chmod +x {} \;
          
          echo "scripts_path=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "scripts_file=$build_script" >> $GITHUB_ENV

      - name: Run compile scripts
        id: compile-scripts
        run: |
          echo "test=$PWD"
          # 执行脚本
          scripts_file=${{ env.scripts_file }}
          echo "scripts=$scripts_file"
          
          if [ -x "${scripts_file}" ]; then
              source ${scripts_file} 1
          fi
          
          # 检查固件信息
          if [ -z "${FIRMWARE_JSON_OBJECT}" ]; then
              echo "未生成固件,请检查!"
              exit 1
          fi
          
          echo "$FIRMWARE_JSON_OBJECT" > firmware.json
          
          # 设置 JSON 输出
          echo "firmware_json=firmware.json" >> $GITHUB_ENV
          
          echo "curdir=$PWD"
          ls -al $PWD
          cat firmware.json
          
      - name: Extract Firmware Details
        id: extract_firmware_info
        run: |
          echo "curdir=$PWD"
          ls -al $PWD
          
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2  # main
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 3
          keep_minimum_runs: 2
